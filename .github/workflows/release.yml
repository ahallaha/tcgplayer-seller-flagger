name: release

on:
  push:
    branches:
      - "main"
jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Increment Version
        uses: ./.github/actions/release
  build:
    needs: create_release
    name: "Release"
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@main
        with:
          fetch-depth: 0
      - name: Print Commit Message
        run: |
          git rev-list --format=%B --max-count=1 HEAD | sed '2q;d'
      - name: Extract Commit Message
        id: commit-message
        run: |
          echo "COMMIT_MSG=$(git rev-list --format=%B --max-count=1 HEAD | sed '2q;d')" >> $GITHUB_ENV
      - name: Print Tag Name
        run: |
          git tag | sort -V | tail -1
      - name: Extract Tag Name
        id: tag-name
        run: |
          echo "COMMIT_TAG=$(git tag | sort -V | tail -1)" >> $GITHUB_ENV
      - name: Build
        run: zip ./dist.zip ./icons entry.html main.js manifest.json popup.js styles.css
      - name: Upload Artifact
        uses: actions/upload-artifact@main
        with:
          name: dist.zip
          path: dist.zip
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.COMMIT_TAG }}
          release_name: Release ${{ env.COMMIT_TAG }}
          body: ${{ env.COMMIT_MSG }}
          draft: false
          prerelease: false

  upload_artifact:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: download artifact
        uses: actions/download-artifact@main
        with:
          name: dist.zip
          path: ./
      - name: Upload Release Asset
        id: upload_release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.build.outputs.upload_url }}
          asset_path: ./dist.zip
          asset_name: dist.zip
          asset_content_type: application/zip
